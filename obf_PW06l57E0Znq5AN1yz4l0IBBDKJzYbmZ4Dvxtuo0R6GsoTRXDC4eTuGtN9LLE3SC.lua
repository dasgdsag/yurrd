--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v86=v2(v0(v30,16));if v19 then local v108=v5(v86,v19);v19=nil;return v108;else return v86;end end end);local function v20(v31,v32,v33) if v33 then local v87=(v31/((5 -3)^(v32-(2 -(1 + 0)))))%(((1 + 2) -1)^(((v33-((879 -(282 + 595)) -1)) -(v32-(620 -(555 + 64)))) + 1)) ;return v87-(v87%(932 -(857 + 74))) ;else local v88=((2207 -(1523 + 114)) -(367 + 201))^(v32-1) ;return (((v31%(v88 + v88))>=v88) and ((834 + 94) -(214 + 713))) or 0 ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (2 -0) );v18=v18 + 2 ;return (v36 * (1321 -(68 + 997))) + v35 ;end local function v23() local v37=1270 -((414 -188) + 1044) ;local v38;local v39;local v40;local v41;while true do if (v37==(4 -3)) then return (v41 * (16777333 -(32 + 85))) + (v40 * 65536) + (v39 * (251 + 5)) + v38 ;end if (v37==(0 + 0)) then v38,v39,v40,v41=v1(v16,v18,v18 + (960 -(892 + 65)) );v18=v18 + (9 -5) ;v37=1 -(350 -(87 + 263)) ;end end end local function v24() local v42=v23();local v43=v23();local v44=181 -(67 + 113) ;local v45=(v20(v43,1,15 + 5 ) * ((4 -2)^(24 + 8))) + v42 ;local v46=v20(v43,21,123 -92 );local v47=((v20(v43,32)==1) and  -(953 -(802 + 150))) or ((2 + 0) -(792 -(368 + 423))) ;if (v46==((0 -0) -0)) then if (v45==((18 -(10 + 8)) + 0)) then return v47 * (997 -(915 + (315 -233))) ;else local v109=0 -0 ;while true do if (v109==(0 + 0)) then v46=1;v44=(442 -(416 + 26)) -0 ;break;end end end elseif (v46==((10325 -7091) -(1069 + 51 + 67))) then return ((v45==(0 -0)) and (v47 * ((1 -0)/(0 + 0)))) or (v47 * NaN) ;end return v8(v47,v46-1023 ) * (v44 + (v45/((3 -1)^52))) ;end local function v25(v48) local v49;if  not v48 then v48=v23();if (v48==0) then return "";end end v49=v3(v16,v18,(v18 + v48) -(1 -0) );v18=v18 + v48 ;local v50={};for v66=439 -(145 + 293) , #v49 do v50[v66]=v2(v1(v3(v49,v66,v66)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return function(v89,v90,v91,v92,v93,v94,v95,v96) local v89=(function() return 0 + 0 ;end)();local v90=(function() return;end)();local v91=(function() return;end)();while true do if (v89~= #"!") then else if (v90== #"!") then v91=(function() return v92()~=(0 -0) ;end)();elseif (v90==(2 + 0)) then v91=(function() return v93();end)();elseif (v90== #"nil") then v91=(function() return v94();end)();end v95[v96]=(function() return v91;end)();break;end if (v89==(1180 -(1123 + 57))) then local v115=(function() return 0;end)();local v116=(function() return;end)();while true do if (v115==0) then v116=(function() return 0 + 0 ;end)();while true do if (v116==1) then v89=(function() return  #"!";end)();break;end if (v116==0) then v90=(function() return v92();end)();v91=(function() return nil;end)();v116=(function() return 1;end)();end end break;end end end end return v89,v90,v91,v92,v93,v94,v95,v96;end;end)();local v52=(function() return function(v97,v98,v99) local v100=(function() return 254 -(163 + 91) ;end)();while true do if (0==v100) then v97[v98-#"]" ]=(function() return v99();end)();return v97,v98,v99;end end end;end)();local v53=(function() return {};end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {v53,v54,nil,v55};end)();local v57=(function() return v23();end)();local v58=(function() return {};end)();for v68= #",",v57 do FlatIdent_7126A,Type,Cons,v21,v24,v25,v58,v68=(function() return v51(FlatIdent_7126A,Type,Cons,v21,v24,v25,v58,v68);end)();end v56[ #"gha"]=(function() return v21();end)();for v69= #"!",v23() do local v70=(function() return v21();end)();if (v20(v70, #" ", #"!")==(0 + 0)) then local v104=(function() return 0 -0 ;end)();local v105=(function() return;end)();local v106=(function() return;end)();local v107=(function() return;end)();while true do if (1~=v104) then else local v118=(function() return 0 -0 ;end)();while true do if (v118==1) then v104=(function() return 2;end)();break;end if (v118~=0) then else v107=(function() return {v22(),v22(),nil,nil};end)();if (v105==(0 + 0)) then local v124=(function() return 0;end)();local v125=(function() return;end)();while true do if (v124~=0) then else v125=(function() return 0 -0 ;end)();while true do if (v125==(0 + 0)) then v107[ #"xnx"]=(function() return v22();end)();v107[ #"0836"]=(function() return v22();end)();break;end end break;end end elseif (v105== #"\\") then v107[ #"xxx"]=(function() return v23();end)();elseif (v105==2) then v107[ #"91("]=(function() return v23() -((1476 -(1329 + 145))^(987 -(140 + 831))) ;end)();elseif (v105== #"xnx") then local v245=(function() return 0;end)();local v246=(function() return;end)();while true do if (v245==(1850 -(1409 + 441))) then v246=(function() return 0;end)();while true do if (v246~=0) then else v107[ #"asd"]=(function() return v23() -(2^16) ;end)();v107[ #"0313"]=(function() return v22();end)();break;end end break;end end end v118=(function() return 1;end)();end end end if (v104==2) then if (v20(v106, #"{", #"\\")~= #"~") then else v107[2]=(function() return v58[v107[720 -(15 + 703) ]];end)();end if (v20(v106,1 + 1 ,440 -(262 + 176) )== #"{") then v107[ #"asd"]=(function() return v58[v107[ #"xxx"]];end)();end v104=(function() return 1724 -(345 + 1376) ;end)();end if (v104==0) then local v119=(function() return 688 -(198 + 490) ;end)();while true do if ((4 -3)==v119) then v104=(function() return 2 -1 ;end)();break;end if (0~=v119) then else v105=(function() return v20(v70,2, #"asd");end)();v106=(function() return v20(v70, #"xnxx",1212 -(696 + 510) );end)();v119=(function() return 1 -0 ;end)();end end end if (v104~=(1265 -(1091 + 171))) then else if (v20(v106, #"-19", #"91(")== #"!") then v107[ #"asd1"]=(function() return v58[v107[ #"asd1"]];end)();end v53[v69]=(function() return v107;end)();break;end end end end for v71= #",",v23() do v54,v71,v28=(function() return v52(v54,v71,v28);end)();end return v56;end local function v29(v60,v61,v62) local v63=v60[1 + 0 + 0 ];local v64=v60[(15 -9) -4 ];local v65=v60[3];return function(...) local v72=v63;local v73=v64;local v74=v65;local v75=v27;local v76=3 -2 ;local v77= -(375 -(123 + 251));local v78={};local v79={...};local v80=v12("#",...) -(699 -(208 + 490)) ;local v81={};local v82={};for v101=0 + (0 -0) ,v80 do if ((v101>=v74) or (669==4223)) then v78[v101-v74 ]=v79[v101 + 1 + (1661 -(1477 + 184)) ];else v82[v101]=v79[v101 + (837 -(660 + 176)) ];end end local v83=(v80-v74) + 1 + 0 ;local v84;local v85;while true do v84=v72[v76];v85=v84[1];if (v85<=(222 -(14 + (255 -67)))) then if ((2232<=2596) and (v85<=(9 + 0))) then if ((2095<3686) and (v85<=4)) then if (v85<=(676 -(534 + 141))) then if ((v85>0) or (1692<588) or (1595>=4474)) then v82[v84[1 + 1 ]]=v62[v84[3 + 0 ]];else local v128=v84[2 + 0 ];local v129,v130=v75(v82[v128](v13(v82,v128 + (1 -0) ,v84[4 -(857 -(564 + 292)) ])));v77=(v130 + v128) -(2 -1) ;local v131=0 + 0 ;for v170=v128,v77 do local v171=(0 -0) + (0 -0) ;while true do if (v171==(396 -(115 + (585 -(244 + 60))))) then v131=v131 + (2 -1) ;v82[v170]=v129[v131];break;end end end end elseif (v85<=(2 + 0)) then v82[v84[4 -2 ]][v84[10 -7 ]]=v84[871 -(550 + 317) ];elseif ((v85>(3 -0)) or (4797<3651)) then local v188=0 -0 ;local v189;local v190;while true do if ((v188==(2 -1)) or (4619<2882)) then for v258=286 -(134 + 151) , #v81 do local v259=v81[v258];for v271=0 + 0 , #v259 do local v272=v259[v271];local v273=v272[1666 -((1446 -(41 + 435)) + 695) ];local v274=v272[(1004 -(938 + 63)) -1 ];if ((v273==v82) and (v274>=v189)) then v190[v274]=v273[v274];v272[1]=v190;end end end break;end if (v188==(1990 -(582 + 1408))) then v189=v84[6 -4 ];v190={};v188=1;end end else v76=v84[3];end elseif ((v85<=(7 -1)) or (4177>4850)) then if (v85==(18 -13)) then local v134=v84[1826 -(1195 + 629) ];v82[v134]=v82[v134](v13(v82,v134 + 1 ,v84[3 -(0 + 0) ]));else local v136=v84[243 -(187 + 54) ];v82[v136]=v82[v136]();end elseif ((v85<=7) or (400>1111) or (294>=4831)) then v82[v84[782 -(162 + 618) ]]=v61[v84[3 + 0 ]];elseif ((3051>1005) and (v85==(6 + 2))) then local v192=0 -0 ;local v193;while true do if ((0 -0)==v192) then v193=v84[1 + 1 ];v82[v193](v13(v82,v193 + ((2762 -(936 + 189)) -(1373 + 87 + 176)) ,v84[1003 -(451 + 549) ]));break;end end else local v194=0 + 0 ;local v195;while true do if ((2029<=3084) and (v194==0)) then v195=v84[(1615 -(1565 + 48)) -0 ];v82[v195]=v82[v195](v13(v82,v195 + 1 ,v77));break;end end end elseif (v85<=(23 -9)) then if (v85<=11) then if (v85==(1394 -(746 + 638))) then v82[v84[1 + 1 ]]={};else v82[v84[2 -0 ]][v84[(213 + 131) -(218 + 123) ]]=v82[v84[1585 -(1535 + 46) ]];end elseif (v85<=(12 + 0)) then if ((3693<=4382) and (v82[v84[1 + 1 ]]==v84[4])) then v76=v76 + (561 -(306 + 254)) ;else v76=v84[1 + 2 ];end elseif (v85>13) then local v197=0 -0 ;local v198;local v199;while true do if (v197==(1468 -(899 + 568))) then v82[v198 + 1 + 0 ]=v199;v82[v198]=v199[v84[4]];break;end if (v197==0) then v198=v84[4 -2 ];v199=v82[v84[606 -(268 + 335) ]];v197=291 -(60 + 230) ;end end else local v200=v84[574 -(426 + 146) ];local v201=v82[v84[1 + 2 ]];v82[v200 + ((2595 -(782 + 356)) -(282 + (1441 -(176 + 91)))) ]=v201;v82[v200]=v201[v84[(2123 -1308) -(569 + 242) ]];end elseif ((v85<=17) or (3282>4100) or (2037==2420)) then if ((v85<=(43 -(41 -13))) or (3580<2844)) then for v172=v84[1 + (1093 -(975 + 117)) ],v84[1027 -(706 + 318) ] do v82[v172]=nil;end elseif ((4458>3904) and (v85>16)) then local v205=v84[1253 -(721 + 530) ];v82[v205](v82[v205 + 1 ]);else local v206=v84[1273 -(945 + 326) ];v82[v206]=v82[v206](v13(v82,v206 + (2 -1) ,v84[3]));end elseif ((436>=123) and (v85<=(17 + 1))) then local v143=v84[702 -(271 + 429) ];local v144={};for v174=(1876 -(157 + 1718)) + 0 , #v81 do local v175=v81[v174];for v208=1500 -(1408 + 92) , #v175 do local v209=v175[v208];local v210=v209[1];local v211=v209[1088 -(461 + 508 + 117) ];if ((v210==v82) and (v211>=v143)) then v144[v211]=v210[v211];v209[1]=v144;end end end elseif (v85==(1307 -(993 + 295))) then local v212=v84[1 + 1 ];v82[v212]=v82[v212]();else v82[v84[2]]=v82[v84[3]];end elseif (v85<=30) then if (v85<=(1196 -(418 + 753))) then if (v85<=22) then if (v85>(8 + 13)) then v82[v84[1 + 1 ]]=v62[v84[1 + 2 ]];else local v147=v84[1 + (3 -2) ];v82[v147]=v82[v147](v13(v82,v147 + (530 -(406 + (420 -297))) ,v77));end elseif ((500<1816) and (v85<=(1792 -(1749 + 20)))) then v82[v84[1 + 1 ]]=v84[1325 -(1249 + 73) ];elseif ((3574==3574) and (89<4490) and (v85==(9 + 15))) then do return;end else v76=v84[3];end elseif ((v85<=(1172 -(466 + 679))) or (4983<1808)) then if (v85==(62 -36)) then local v151=v73[v84[8 -5 ]];local v152;local v153={};v152=v10({},{__index=function(v176,v177) local v178=1900 -(106 + 1794) ;local v179;while true do if ((221<390) and ((0 + 0)==v178)) then v179=v153[v177];return v179[1 + 0 ][v179[5 -3 ]];end end end,__newindex=function(v180,v181,v182) local v183=v153[v181];v183[1][v183[5 -3 ]]=v182;end});for v185=115 -(4 + 110) ,v84[1022 -(697 + 321) ] do v76=v76 + (585 -(57 + 527)) ;local v186=v72[v76];if ((v186[1428 -((111 -70) + 1386) ]==(139 -((35 -18) + 86))) or (2213<=1421)) then v153[v185-(1 + 0) ]={v82,v186[169 -(122 + 44) ]};else v153[v185-(1 -0) ]={v61,v186[3 + 0 ]};end v81[ #v81 + 1 + 0 ]=v153;end v82[v84[3 -1 ]]=v29(v151,v152,v62);else local v155=v84[67 -(30 + 35) ];v82[v155](v82[v155 + 1 + 0 + 0 ]);end elseif ((3829>3769) and (v85<=(1285 -(1043 + (400 -186))))) then v82[v84[7 -5 ]][v84[1215 -(323 + 889) ]]=v82[v84[10 -6 ]];elseif ((3058<4860) and (v85>(609 -(361 + 219)))) then v82[v84[322 -(53 + 267) ]]={};else do return;end end elseif (((1485<=2904) and (v85<=(8 + 27))) or (1296>=4446)) then if ((v85<=32) or (1393>4489)) then if (v85>(444 -(15 + 398))) then local v158=0;local v159;while true do if (v158==(982 -((48 -30) + 964))) then v159=v84[7 -5 ];v82[v159](v13(v82,v159 + 1 + 0 ,v84[2 + 1 ]));break;end end else v82[v84[852 -(20 + 830) ]]=v61[v84[3 + 0 ]];end elseif ((4269==4269) and (v85<=33)) then local v162=126 -(116 + 10) ;local v163;local v164;local v165;local v166;while true do if ((387<=2782) and (v162==(1 + (1228 -(322 + 905))))) then for v239=v163,v77 do v166=v166 + (739 -(542 + 196)) ;v82[v239]=v164[v166];end break;end if (v162==(1 -0)) then v77=(v165 + v163) -(1 + 0) ;v166=0 + 0 ;v162=1 + 1 ;end if (v162==(0 -0)) then v163=v84[4 -2 ];v164,v165=v75(v82[v163](v13(v82,v163 + (1552 -((1737 -(602 + 9)) + 425)) ,v84[(1597 -(449 + 740)) -(118 + 287) ])));v162=3 -(874 -(826 + 46)) ;end end elseif ((v85>(1155 -(118 + 1003))) or (1899<=917) or (4424<27)) then v82[v84[2]]();elseif (v82[v84[(952 -(245 + 702)) -3 ]]==v84[381 -(142 + 235) ]) then v76=v76 + (4 -3) ;else v76=v84[1 + 2 ];end elseif (v85<=(1015 -(553 + 424))) then if (v85<=(67 -31)) then v82[v84[2 + 0 ]]=v82[v84[3 + 0 ]];elseif ((v85>(22 + 15)) or (1997>3815)) then for v231=v84[1 + 1 ],v84[2 + 1 ] do v82[v231]=nil;end else v82[v84[4 -2 ]][v84[(21 -14) -(2 + 2) ]]=v84[8 -4 ];end elseif ((3465>1913) and (v85<=(12 + 27))) then v82[v84[9 -7 ]]();elseif (v85==(793 -(239 + (2412 -(260 + 1638))))) then local v220=0 + (440 -(382 + 58)) ;local v221;local v222;local v223;while true do if (v220==(1329 -((2556 -1759) + 532))) then v221=v73[v84[3 + 0 ]];v222=nil;v220=1;end if ((733<1819) and ((v220==(1 + 1)) or (4312<=876))) then for v260=2 -1 ,v84[4] do v76=v76 + (1203 -(373 + 689 + 140)) ;local v261=v72[v76];if (v261[(1512 -780) -(476 + (757 -502)) ]==(1166 -(369 + 761))) then v223[v260-(1 + 0) ]={v82,v261[3]};else v223[v260-(239 -(64 + 174)) ]={v61,v261[339 -(144 + 192) ]};end v81[ #v81 + (217 -(42 + 174)) ]=v223;end v82[v84[(3 -1) + 0 ]]=v29(v221,v222,v62);break;end if (v220==(1 + 0)) then v223={};v222=v10({},{__index=function(v263,v264) local v265=v223[v264];return v265[1][v265[1 + 1 ]];end,__newindex=function(v266,v267,v268) local v269=v223[v267];v269[1505 -(363 + 1141) ][v269[1582 -(1183 + 397) ]]=v268;end});v220=5 -3 ;end end else v82[v84[2 + (0 -0) ]]=v84[3 + 0 ];end v76=v76 + (1976 -(1913 + 62)) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);